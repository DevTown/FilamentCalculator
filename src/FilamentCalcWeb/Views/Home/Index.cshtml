@using System.Globalization
@model CalculatorViewModel
@{
    ViewData["Title"] = "Calculator";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div xmlns="http://www.w3.org/1999/html">
    @using (Html.BeginForm("Index", "Home", FormMethod.Post))
    {
        <div class="form-horizontal">
           <div class="form-group">
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                @Html.LabelFor(model => model.Filaments)
                @Html.DropDownListFor(o => o.SelectedFilament,
                    new SelectList(Model.Filaments, nameof(Filament.FilamentId), nameof(Filament.Displayname)), "Select Filament", new {@class = "form-control"})
            </div>
            
            <div class="form-group">
              @Html.LabelFor(model => model.Printers)
               @Html.DropDownListFor(a => a.SelectedPrinter,
                                new SelectList(Model.Printers, nameof(Printer.PrinterId), nameof(Printer.Name)), "Select Printer", new {@class = "form-control"})
          </div>
            
                <div class="form-group">
                @Html.LabelFor(model => model.weight)
                @Html.TextBoxFor(model => model.weight,new { @class = "form-control" })
            </div>

            <!-- 
            <div class="form-group">
                @Html.LabelFor(model => model.lengthmm)
                @Html.TextBoxFor(model => model.lengthmm,new { @class = "form-control" })
            </div>
            -->
            <div class="form-group">
                @Html.LabelFor(model => model.printtimemin)
                @Html.TextBoxFor(model => model.printtimemin,new { @class = "form-control" }) 
                @Html.CheckBoxFor(model => model.isMinuit) @Html.LabelFor(model => model.isMinuit) 
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.manufacurworktime)
                @Html.TextBoxFor(model => model.manufacurworktime,new { @class = "form-control" })
            </div>

            <button type="submit" class="btn btn-outline-success my-2 my-sm-0">Calculate</button>
        </div>
    }
    
    <br><br>
    
    @if(Model.costs > 0)
    {
        <div class="card mb-4 rounded-3 shadow-sm">
            <div class="card-header py-3">
                <h4 class="my-0 fw-normal">Print Costs</h4>
            </div>
            <table class="table table-sm table-striped">
                <thead class="">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Item</th>
                    <th scope="col">Cost</th>
                </tr>
                </thead>
                <tbody  class="table-group-divider">
                <tr>
                    <th scope="row">1</th>
                    <td>@Html.LabelFor(model => model.filamentCosts)</td>
                    <td> @Html.DisplayFor(model => model.filamentCosts) €</td>
                </tr>
                <tr>
                    <th scope="row">2</th>
                    <td>@Html.LabelFor(model => model.energyCosts)</td>
                    <td> @Html.DisplayFor(model => model.energyCosts) €</td>
                </tr>
                <tr>
                    <th scope="row">3</th>
                    <td>@Html.LabelFor(model => model.manufacturingCosts)</td>
                    <td> @Html.DisplayFor(model => model.manufacturingCosts) €</td>
                </tr>
                </tbody>
                <tfoot>
                <tr class="font-weight-bold table-info">
                    <th scope="row">4</th>
                    <td>@Html.LabelFor(model => model.costs)</td>
                    <td>@Html.DisplayFor(model => model.costs) €</td>
                </tr>
                </tfoot>
            </table>
        </div>
    }
</div>
